
package org.example.ClientSimpleStandalone.services;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ClientService", targetNamespace = "https://it.nure.ua/sport/service")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
        org.example.ClientSimpleStandalone.generated.ObjectFactory.class,
        ObjectFactory.class
})
public interface ClientService {


    /**
     * 
     * @param clientToken
     * @param parameters
     * @param serverToken
     * @return
     *     returns org.example.ClientSimpleStandAlone.services.AddClientResponse
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(name = "addClientResponse", targetNamespace = "https://it.nure.ua/sport/service", partName = "result")
    @Action(input = "https://it.nure.ua/sport/service/ClientService/addClientRequest", output = "https://it.nure.ua/sport/service/ClientService/addClientResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "https://it.nure.ua/port/service/ClientService/addClient/Fault/DAOException")
    })

    public AddClientResponse addClient(
        @WebParam(name = "addClient", targetNamespace = "https://it.nure.ua/sport/service", partName = "parameters")
        AddClient parameters,
        @WebParam(name = "clientToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "serverToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, mode = WebParam.Mode.OUT, partName = "serverToken")
        Holder<String> serverToken)
        throws DAOException_Exception
    ;
    /**
     *
     * @param clientToken
     * @param parameters
     * @param serverToken
     * @return
     *     returns ua.nure.it.social.service.NewPostsListResponse
     */
    @WebMethod
    @WebResult(name = "ClientsListResponse", targetNamespace = "https://it.nure.ua/sport/service", partName = "result")
    @Action(input = "https://it.nure.ua/sport/service/ClientService/newPostsListRequest", output = "https://it.nure.ua/sport/service/ClientService/ClientsListResponse")
    public ClientsListResponse ClientsList(
            @WebParam(name = "ClientsList", targetNamespace = "https://it.nure.ua/sport/service", partName = "parameters")
            ClientsList parameters,
            @WebParam(name = "clientToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, partName = "clientToken")
            String clientToken,
            @WebParam(name = "serverToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, mode = WebParam.Mode.OUT, partName = "serverToken")
            Holder<String> serverToken);

    /**
     * 
     * @param clientToken
     * @param parameters
     * @param serverToken
     * @return
     *     returns org.example.ClientSimpleStandalone.services.GetClientResponse
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(name = "getClientResponse", targetNamespace = "https://it.nure.ua/sport/service", partName = "result")
    @Action(input = "https://it.nure.ua/sport/service/ClientService/getClientsRequest", output = "https://it.nure.ua/sport/service/ClientService/getClientsResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "https://it.nure.ua/sport/service/ClientService/getClient/Fault/DAOException")
    })
    public GetClientResponse getClient(
        @WebParam(name = "getClient", targetNamespace = "https://it.nure.ua/sport/service", partName = "parameters")
        GetClient parameters,
        @WebParam(name = "clientToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "serverToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, mode = WebParam.Mode.OUT, partName = "serverToken")
        Holder<String> serverToken)
        throws DAOException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param parameters
     * @param serverToken
     * @return
     *     returns org.example.ClientSimpleStandalone.services.EditClientResponse
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(name = "editPostResponse", targetNamespace = "https://it.nure.ua/sport/service", partName = "result")
    @Action(input = "https://it.nure.ua/sport/service/ClientService/editClientRequest", output = "https://it.nure.ua/sport/service/ClientService/editClientResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "https://it.nure.ua/sport/service/ClientService/editClient/Fault/DAOException")
    })
    public EditClientResponse editClient(
        @WebParam(name = "editClient", targetNamespace = "https://it.nure.ua/sport/service", partName = "parameters")
        EditClient parameters,
        @WebParam(name = "clientToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "serverToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, mode = WebParam.Mode.OUT, partName = "serverToken")
        Holder<String> serverToken)
        throws DAOException_Exception
    ;

    /**
     * 
     * @param clientToken
     * @param parameters
     * @param serverToken
     * @return
     *     returns org.example.ClientSimpleStandalone.services.DeleteClientResponse
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(name = "deleteClientResponse", targetNamespace = "https://it.nure.ua/sport/service", partName = "result")
    @Action(input = "https://it.nure.ua/sport/service/ClientService/deleteClientRequest", output = "https://it.nure.ua/sport/service/ClientService/deleteClientResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "https://it.nure.ua/sport/service/ClientService/deleteClient/Fault/DAOException")
    })
    public DeleteClientResponse deleteClient(
        @WebParam(name = "deleteClient", targetNamespace = "https://it.nure.ua/sport/service", partName = "parameters")
        DeleteClient parameters,
        @WebParam(name = "clientToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, partName = "clientToken")
        String clientToken,
        @WebParam(name = "serverToken", targetNamespace = "https://it.nure.ua/sport/service", header = true, mode = WebParam.Mode.OUT, partName = "serverToken")
        Holder<String> serverToken)
        throws DAOException_Exception
    ;
}
