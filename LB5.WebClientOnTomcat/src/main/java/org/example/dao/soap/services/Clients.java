
package org.example.dao.soap.services;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "Clients", targetNamespace = "https://it.nure.ua/sport/service", wsdlLocation = "http://localhost:8080/clients?wsdl")
public class Clients
    extends Service
{

    private final static URL CLIENTS_WSDL_LOCATION;
    private final static WebServiceException CLIENTS_EXCEPTION;
    private final static QName CLIENTS_QNAME = new QName("https://it.nure.ua/sport/service", "Clients");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/clients?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CLIENTS_WSDL_LOCATION = url;
        CLIENTS_EXCEPTION = e;
    }

    public Clients() {
        super(__getWsdlLocation(), CLIENTS_QNAME);
    }

    public Clients(WebServiceFeature... features) {
        super(__getWsdlLocation(), CLIENTS_QNAME, features);
    }

    public Clients(URL wsdlLocation) {
        super(wsdlLocation, CLIENTS_QNAME);
    }

    public Clients(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CLIENTS_QNAME, features);
    }

    public Clients(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Clients(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ClientService
     */
    @WebEndpoint(name = "ClientPort")
    public ClientService getClientPort() {
        return super.getPort(new QName("https://it.nure.ua/sport/service", "ClientPort"), ClientService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PostService
     */
    @WebEndpoint(name = "ClientPort")
    public ClientService getClientPort(WebServiceFeature... features) {
        return super.getPort(new QName("https://it.nure.ua/sport/service", "PostPort"), ClientService.class, features);
    }
    private static URL __getWsdlLocation() {

        if (CLIENTS_EXCEPTION != null) {
            throw CLIENTS_EXCEPTION;
        }
        return CLIENTS_WSDL_LOCATION;
    }

}
